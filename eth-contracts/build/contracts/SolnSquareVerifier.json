{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "index",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "solAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "newSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownerTransference",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "emitter",
          "type": "address"
        }
      ],
      "name": "pauseEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "emitter",
          "type": "address"
        }
      ],
      "name": "unpauseEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "pauseState",
          "type": "bool"
        }
      ],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "solAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSol",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "solMint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"index\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"solAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"newSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransference\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"pauseEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"unpauseEvent\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"solAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pauseState\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"solMint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xc24247faf4934b7643700d95fdba85050ebd77b83e5def538900c212624ce26a\",\"urls\":[\"bzz-raw://782f27770ecf4941360fb7f36a9819c2c4719e01cd1256d9153c4315179f0499\",\"dweb:/ipfs/QmTrGm6V1o7Y6AWmxvUAjo7JKaYdYjjKf3FrfBmCtzWfnw\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xb90b53b44e6ca088ca50435b31eb35edc115cee7b939a8afff62980bbf06e0ee\",\"urls\":[\"bzz-raw://365b207ad0c54bcb6b21c0121363994be3b69501391ee388bb7f1cc77f640bf8\",\"dweb:/ipfs/QmRkGd1ZBMkwC13Um5jb6brnah1BGCXJdcnmXt7Zcp9s4s\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xacac5de5c41063cec1ed22263e092c385ccecb1603fc89f65ea66134e978f54c\",\"urls\":[\"bzz-raw://616e2e32058375d2718b1f5291574f3d69b85c573557fb525296e877f85c7335\",\"dweb:/ipfs/Qmf1VZxEPFDp9G6DDug3ibaGwhjF6Uk3r6pK12KMFygKz8\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0xf158a28daa0d6290c0b60d805b87e9f50f0bb8b30630bd081700b50d1f90dab5\",\"urls\":[\"bzz-raw://3ba7f0b8d392b7b885f2efe67786a16cf5cc1cc3993ea69d748b1b91a63227d7\",\"dweb:/ipfs/QmNbHSpAtZQ6kshRpbxJDQQYBr9wJttz5jG5pF1C1jAz7W\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601181526020017f54686520436f6f6c65737420546f6b656e0000000000000000000000000000008152506040518060400160405280600381526020017f54435400000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f81526020016200437e603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908315150217905550620000fc6301ffc9a760e01b6200019860201b60201c565b620001146380ac58cd60e01b6200019860201b60201c565b6200012c63780e9d6360e01b6200019860201b60201c565b82600f90805190602001906200014492919062000238565b5081601090805190602001906200015d92919062000238565b5080601190805190602001906200017692919062000238565b506200018f635b5e139f60e01b6200019860201b60201c565b505050620002e7565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001cc57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027b57805160ff1916838001178555620002ac565b82800160010185558215620002ac579182015b82811115620002ab5782518255916020019190600101906200028e565b5b509050620002bb9190620002bf565b5090565b620002e491905b80821115620002e0576000816000905550600101620002c6565b5090565b90565b61408780620002f76000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80634f6ccce7116100c3578063a22cb4651161007c578063a22cb46514610adc578063ad4a242414610b2c578063b88d4fde14610b7a578063c87b56dd14610c7f578063e985e9c514610d26578063f2fde38b14610da25761014d565b80634f6ccce714610686578063621e9ec0146106c85780636352211e1461084157806370a08231146108af578063863e560e14610907578063893d20e814610a925761014d565b806323b872dd1161011557806323b872dd146102c157806327dc297e1461032f5780632f745c59146103f457806338bbfa501461045657806340c10f19146105b257806342842e0e146106185761014d565b806301ffc9a71461015257806302329a29146101b7578063081812fc146101e7578063095ea7b31461025557806318160ddd146102a3575b600080fd5b61019d6004803603602081101561016857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610de6565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101cd57600080fd5b81019080803515159060200190929190505050610e4e565b005b610213600480360360208110156101fd57600080fd5b8101908080359060200190929190505050610ff1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061102e565b005b6102ab6112c5565b6040518082815260200191505060405180910390f35b61032d600480360360608110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112d2565b005b6103f26004803603604081101561034557600080fd5b81019080803590602001909291908035906020019064010000000081111561036c57600080fd5b82018360208201111561037e57600080fd5b803590602001918460018302840111640100000000831117156103a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f5565b005b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611338565b6040518082815260200191505060405180910390f35b6105b06004803603606081101561046c57600080fd5b81019080803590602001909291908035906020019064010000000081111561049357600080fd5b8201836020820111156104a557600080fd5b803590602001918460018302840111640100000000831117156104c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561052a57600080fd5b82018360208201111561053c57600080fd5b8035906020019184600183028401116401000000008311171561055e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113ab565b005b6105fe600480360360408110156105c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113b0565b604051808215151515815260200191505060405180910390f35b6106846004803603606081101561062e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611474565b005b6106b26004803603602081101561069c57600080fd5b8101908080359060200190929190505050611494565b6040518082815260200191505060405180910390f35b61082760048036036101408110156106df57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610794578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610740565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506114c8565b604051808215151515815260200191505060405180910390f35b61086d6004803603602081101561085757600080fd5b81019080803590602001909291905050506116c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108f1600480360360208110156108c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611703565b6040518082815260200191505060405180910390f35b610a90600480360361018081101561091e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156109fd578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906109a9565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611753565b005b610a9a611ac3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b2a60048036036040811015610af257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611aec565b005b610b7860048036036040811015610b4257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c26565b005b610c7d60048036036080811015610b9057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bf757600080fd5b820183602082011115610c0957600080fd5b80359060200191846001830284011164010000000083111715610c2b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611cc1565b005b610cab60048036036020811015610c9557600080fd5b8101908080359060200190929190505050611ce7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ceb578082015181840152602081019050610cd0565b50505050905090810190601f168015610d185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d8860048036036040811015610d3c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dae565b604051808215151515815260200191505060405180910390f35b610de460048036036020811015610db857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e42565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613ff3603d913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610f8a577f3972dd2b7e2497f117a1466d95950e53e1185d6a905c8007a94caa115ccf680433604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1610fee565b7f446f7ddd9a53c275b91e730638e810b20623089fdd9736ccc22ec7963e6e569633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180613fd06023913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061118c575061118b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611dae565b5b6111e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613f886026913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6112dc338261208b565b6112e557600080fd5b6112f0838383612120565b505050565b611334828260006040519080825280601f01601f19166020018201604052801561132e5781602001600182028038833980820191505090505b506113ab565b5050565b600061134383611703565b821061134e57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061139857fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613ff3603d913960400191505060405180910390fd5b6114618383612144565b61146a82612165565b6001905092915050565b61148f83838360405180602001604052806000815250611cc1565b505050565b600061149e6112c5565b82106114a957600080fd5b600882815481106114b657fe5b90600052602060002001549050919050565b60006114d2613d28565b60405180606001604052806040518060400160405280896000600281106114f557fe5b602002015181526020018960016002811061150c57fe5b60200201518152508152602001604051806040016040528060405180604001604052808a60006002811061153c57fe5b602002015160006002811061154d57fe5b602002015181526020018a60006002811061156457fe5b602002015160016002811061157557fe5b6020020151815250815260200160405180604001604052808a60016002811061159a57fe5b60200201516000600281106115ab57fe5b602002015181526020018a6001600281106115c257fe5b60200201516001600281106115d357fe5b602002015181525081525081526020016040518060400160405280876000600281106115fb57fe5b602002015181526020018760016002811061161257fe5b60200201518152508152509050606060026040519080825280602002602001820160405280156116515781602001602082028038833980820191505090505b50905060008090505b60028110156116995784816002811061166f57fe5b602002015182828151811061168057fe5b602002602001018181525050808060010191505061165a565b5060006116a682846122b6565b14156116b7576001925050506116be565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061174c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612428565b9050919050565b6000848484846040516020018085600260200280838360005b8381101561178757808201518184015260208101905061176c565b505050509050018460026000925b818410156117db5782846020020151600260200280838360005b838110156117ca5780820151818401526020810190506117af565b505050509050019260010192611795565b9250505083600260200280838360005b838110156118065780820151818401526020810190506117eb565b5050505090500182600260200280838360005b83811015611834578082015181840152602081019050611819565b505050509050019450505050506040516020818303038152906040528051906020012090506013600082815260200190815260200160002060010160149054906101000a900460ff16156118f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468697320736f6c7574696f6e20616c7265616479206578697374730000000081525060200191505060405180910390fd5b60006118fe868686866114c8565b905080611973576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50726f6f66206973206e6f742076616c6964000000000000000000000000000081525060200191505060405180910390fd5b60405180606001604052808381526020018973ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050508160146000898152602001908152602001600020819055507fa8348bf22f24dfdfbd206656d9911e021b39e58b4011b53045a11814d6b264a0828989604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b2557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b601360006014600084815260200190815260200160002054815260200190815260200160002060010160149054906101000a900460ff16611cb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806140306023913960400191505060405180910390fd5b611cbc82826113b0565b505050565b611ccc8484846112d2565b611cd884848484612436565b611ce157600080fd5b50505050565b6060611cf28261261f565b611cfb57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611da25780601f10611d7757610100808354040283529160200191611da2565b820191906000526020600020905b815481529060010190602001808311611d8557829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ee7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613ff3603d913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f506c656173652075736520612076616c6964206164647265737300000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb54f69a22c2850907e06f929b4b7654011d5f09ec1d99bfe9be09589c7feed518183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600080612097836116c6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210657508373ffffffffffffffffffffffffffffffffffffffff166120ee84610ff1565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211757506121168185611dae565b5b91505092915050565b61212b838383612691565b612135838261297e565b61213f8282612b1c565b505050565b61214e8282612be3565b6121588282612b1c565b61216181612d3a565b5050565b61216e8161261f565b6121e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5468697320746f6b656e20686173206e6f74206265656e206d696e746564000081525060200191505060405180910390fd5b61228c60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122795780601f1061224e57610100808354040283529160200191612279565b820191906000526020600020905b81548152906001019060200180831161225c57829003601f168201915b505050505061228783612d86565b612eb3565b6012600083815260200190815260200160002090805190602001906122b2929190613d5b565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506122e4613ddb565b6122ec612ef7565b905080608001515160018651011461230357600080fd5b61230b613e22565b6040518060400160405280600081526020016000815250905060008090505b86518110156123a1578387828151811061234057fe5b60200260200101511061235257600080fd5b6123928261238d8560800151600185018151811061236c57fe5b60200260200101518a858151811061238057fe5b6020026020010151613344565b6133d6565b9150808060010191505061232a565b506123c48183608001516000815181106123b757fe5b60200260200101516133d6565b905061240a856000015186602001516123dc84613487565b85604001516123ee8a60400151613487565b87606001516124008960000151613487565b8960200151613521565b61241a5760019350505050612422565b600093505050505b92915050565b600081600001549050919050565b60006124578473ffffffffffffffffffffffffffffffffffffffff16613685565b6124645760019050612617565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561253f578082015181840152602081019050612524565b50505050905090810190601f16801561256c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561258e57600080fd5b505af11580156125a2573d6000803e3d6000fd5b505050506040513d60208110156125b857600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612748576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613f566032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156127eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506c656173652070726f7669646520612076616c69642061646472657373000081525060200191505060405180910390fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128d7600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136d0565b61291e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136f3565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006129d66001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061370990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612ac3576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612a4357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612a9b57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612b159190613e3c565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612bec8161261f565b15612c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613fae6022913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612cdb600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136f3565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612dce576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612eae565b600082905060005b60008214612df8578080600101915050600a8281612df057fe5b049150612dd6565b6060816040519080825280601f01601f191660200182016040528015612e2d5781602001600182028038833980820191505090505b50905060006001830390505b60008614612ea657600a8681612e4b57fe5b0660300160f81b82828060019003935081518110612e6557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612e9e57fe5b049550612e39565b819450505050505b919050565b6060612eef8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613753565b905092915050565b612eff613ddb565b60405180604001604052807f1603a09dbacc2f6f3bac21f99ce40fd10bae12341f436ee54ff2f2c43f5ab8eb81526020017f224681030f757d9c1f78a058d7475f0aa359ca2f32b71c2b8c55679f29d9e9498152508160000181905250604051806040016040528060405180604001604052807f1db12b72a12c4422fe8bdf1ddced23b2b1a4acefc9c936efa147981a55adfb9981526020017f0376a05a46a3b52cf2df07f6865e4338294d9db42fad615f67803416ae11d056815250815260200160405180604001604052807f12d057bd105b03ecfa5af22819f25a66651f3d6a76f794dd9099daffbd388fb481526020017f06b2cfc7f5728ba01f98c98395c5050b9d12d76059bef63146069a1d01aeab0f8152508152508160200181905250604051806040016040528060405180604001604052807f28e12e015cb23eee5956c3075f7c01d382f8c27266e417f1903764dc056ef16381526020017f1edbf0f593e0bd6bd8c121cf26782b7ce1d3069e9d7b214926d54430b7229fcb815250815260200160405180604001604052807e22c1f45cd308210ff881e045c4d7938382aa2e3af2fc341ded856c5a4c50b681526020017f11e919dd55943e82816eb75ad2959633275cdb85506d63b5ad2581ea059929998152508152508160400181905250604051806040016040528060405180604001604052807f1e20b73985a33bd83cdd55a6c51634493e76be1faa9d70bcaaf6c13cb11e4d6781526020017f2cc1c3a5f78d269b052aacd68e950e8d7c08166e403f356b0d7b2fd98c8411fd815250815260200160405180604001604052807f030b9afd00f7a2ab58a3af3de20fecc721ae3ff004e8e0f26e64a0f1d253219081526020017f0d6c650f6f428dd612243d3f6cae3ae488e459480580a051b58ad0675bfbdaab815250815250816060018190525060036040519080825280602002602001820160405280156131e557816020015b6131d2613e68565b8152602001906001900390816131ca5790505b50816080018190525060405180604001604052807f04824d51fd942425eb07dea90291754cad5bb3c7eb77bb6dd6944877b619afba81526020017f2498dca6359ad2d544b4d4f2880cf043744088b5ec276a42ae046f9b06029284815250816080015160008151811061325457fe5b602002602001018190525060405180604001604052807f1918cfb0fbc27e4a4827e462993d2be2cfd0d7170bb11029fe7f67452a88ee4481526020017f112662dfc579745d77571f75632331ab97f7e8beb30a88f5524ac9d92b228f2b81525081608001516001815181106132c557fe5b602002602001018190525060405180604001604052807f1416c13d8232c3b8211fd2fc095799a79e230aa884868e7dd65173d69fa6d72b81526020017f05b910a5baf74b6ad42609bc1d559dc891d440ce2d00e91a920dea6fccb47bbf815250816080015160028151811061333657fe5b602002602001018190525090565b61334c613e22565b613354613e82565b83600001518160006003811061336657fe5b60200201818152505083602001518160016003811061338157fe5b602002018181525050828160026003811061339857fe5b602002018181525050600060608360808460076107d05a03fa905080600081146133c1576133c3565bfe5b50806133ce57600080fd5b505092915050565b6133de613e22565b6133e6613ea4565b8360000151816000600481106133f857fe5b60200201818152505083602001518160016004811061341357fe5b60200201818152505082600001518160026004811061342e57fe5b60200201818152505082602001518160036004811061344957fe5b602002018181525050600060608360c08460066107d05a03fa9050806000811461347257613474565bfe5b508061347f57600080fd5b505092915050565b61348f613e22565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156134cc575060008360200151145b156134f057604051806040016040528060008152602001600081525091505061351c565b6040518060400160405280846000015181526020018285602001518161351257fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561356057816020015b61354d613e68565b8152602001906001900390816135455790505b509050606060046040519080825280602002602001820160405280156135a057816020015b61358d613ec6565b8152602001906001900390816135855790505b5090508a826000815181106135b157fe5b602002602001018190525088826001815181106135ca57fe5b602002602001018190525086826002815181106135e357fe5b602002602001018190525084826003815181106135fc57fe5b6020026020010181905250898160008151811061361557fe5b6020026020010181905250878160018151811061362e57fe5b6020026020010181905250858160028151811061364757fe5b6020026020010181905250838160038151811061366057fe5b60200260200101819052506136758282613a15565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156136c757506000801b8214155b92505050919050565b6136e86001826000015461370990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061374b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613c68565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156137af5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613834578881815181106137db57fe5b602001015160f81c60f81b8383806001019450815181106137f857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506137c6565b600090505b87518110156138a75787818151811061384e57fe5b602001015160f81c60f81b83838060010194508151811061386b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613839565b600090505b865181101561391a578681815181106138c157fe5b602001015160f81c60f81b8383806001019450815181106138de57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506138ac565b600090505b855181101561398d5785818151811061393457fe5b602001015160f81c60f81b83838060010194508151811061395157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061391f565b600090505b8451811015613a00578481815181106139a757fe5b602001015160f81c60f81b8383806001019450815181106139c457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613992565b82995050505050505050505095945050505050565b60008151835114613a2557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613a645781602001602082028038833980820191505090505b50905060008090505b83811015613c0a57868181518110613a8157fe5b602002602001015160000151826000600684020181518110613a9f57fe5b602002602001018181525050868181518110613ab757fe5b602002602001015160200151826001600684020181518110613ad557fe5b602002602001018181525050858181518110613aed57fe5b602002602001015160000151600160028110613b0557fe5b6020020151826002600684020181518110613b1c57fe5b602002602001018181525050858181518110613b3457fe5b602002602001015160000151600060028110613b4c57fe5b6020020151826003600684020181518110613b6357fe5b602002602001018181525050858181518110613b7b57fe5b602002602001015160200151600160028110613b9357fe5b6020020151826004600684020181518110613baa57fe5b602002602001018181525050858181518110613bc257fe5b602002602001015160200151600060028110613bda57fe5b6020020151826005600684020181518110613bf157fe5b6020026020010181815250508080600101915050613a6d565b50613c13613eec565b6000602082602086026020860160086107d05a03fa90508060008114613c3857613c3a565bfe5b5080613c4557600080fd5b600082600060018110613c5457fe5b602002015114159550505050505092915050565b6000838311158290613d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613cda578082015181840152602081019050613cbf565b50505050905090810190601f168015613d075780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060600160405280613d3b613e68565b8152602001613d48613ec6565b8152602001613d55613e68565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613d9c57805160ff1916838001178555613dca565b82800160010185558215613dca579182015b82811115613dc9578251825591602001919060010190613dae565b5b509050613dd79190613f0e565b5090565b6040518060a00160405280613dee613e68565b8152602001613dfb613ec6565b8152602001613e08613ec6565b8152602001613e15613ec6565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b815481835581811115613e6357818360005260206000209182019101613e629190613f0e565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060400160405280613ed9613f33565b8152602001613ee6613f33565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b613f3091905b80821115613f2c576000816000905550600101613f14565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe54686520616464726573732070726f7669646564206973206e6f7420746865206f776e6572206f662074686520746f6b656e5468697320617070726f76616c206f7065726174696f6e206973206e6f7420616c6c6f7765645468697320746f6b656e2068617320616c7265616479206265656e206d696e74656454686973206164647265737320616c7265616479206f776e732074686520746f6b656e546869732066756e6374696f6e2063616e206265206f6e6c792063616c6c656420627920746865206f776e6572206f662074686520636f6e74726163745468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564a265627a7a723158203d46ec87b989fe836b9bd3da895f9fe426a0d4dbb65709b26f77d0e8c15df49964736f6c6343000510003268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80634f6ccce7116100c3578063a22cb4651161007c578063a22cb46514610adc578063ad4a242414610b2c578063b88d4fde14610b7a578063c87b56dd14610c7f578063e985e9c514610d26578063f2fde38b14610da25761014d565b80634f6ccce714610686578063621e9ec0146106c85780636352211e1461084157806370a08231146108af578063863e560e14610907578063893d20e814610a925761014d565b806323b872dd1161011557806323b872dd146102c157806327dc297e1461032f5780632f745c59146103f457806338bbfa501461045657806340c10f19146105b257806342842e0e146106185761014d565b806301ffc9a71461015257806302329a29146101b7578063081812fc146101e7578063095ea7b31461025557806318160ddd146102a3575b600080fd5b61019d6004803603602081101561016857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610de6565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101cd57600080fd5b81019080803515159060200190929190505050610e4e565b005b610213600480360360208110156101fd57600080fd5b8101908080359060200190929190505050610ff1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061102e565b005b6102ab6112c5565b6040518082815260200191505060405180910390f35b61032d600480360360608110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112d2565b005b6103f26004803603604081101561034557600080fd5b81019080803590602001909291908035906020019064010000000081111561036c57600080fd5b82018360208201111561037e57600080fd5b803590602001918460018302840111640100000000831117156103a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f5565b005b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611338565b6040518082815260200191505060405180910390f35b6105b06004803603606081101561046c57600080fd5b81019080803590602001909291908035906020019064010000000081111561049357600080fd5b8201836020820111156104a557600080fd5b803590602001918460018302840111640100000000831117156104c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561052a57600080fd5b82018360208201111561053c57600080fd5b8035906020019184600183028401116401000000008311171561055e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113ab565b005b6105fe600480360360408110156105c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113b0565b604051808215151515815260200191505060405180910390f35b6106846004803603606081101561062e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611474565b005b6106b26004803603602081101561069c57600080fd5b8101908080359060200190929190505050611494565b6040518082815260200191505060405180910390f35b61082760048036036101408110156106df57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610794578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610740565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506114c8565b604051808215151515815260200191505060405180910390f35b61086d6004803603602081101561085757600080fd5b81019080803590602001909291905050506116c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108f1600480360360208110156108c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611703565b6040518082815260200191505060405180910390f35b610a90600480360361018081101561091e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156109fd578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906109a9565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611753565b005b610a9a611ac3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b2a60048036036040811015610af257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611aec565b005b610b7860048036036040811015610b4257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c26565b005b610c7d60048036036080811015610b9057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bf757600080fd5b820183602082011115610c0957600080fd5b80359060200191846001830284011164010000000083111715610c2b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611cc1565b005b610cab60048036036020811015610c9557600080fd5b8101908080359060200190929190505050611ce7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ceb578082015181840152602081019050610cd0565b50505050905090810190601f168015610d185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d8860048036036040811015610d3c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dae565b604051808215151515815260200191505060405180910390f35b610de460048036036020811015610db857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e42565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613ff3603d913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610f8a577f3972dd2b7e2497f117a1466d95950e53e1185d6a905c8007a94caa115ccf680433604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1610fee565b7f446f7ddd9a53c275b91e730638e810b20623089fdd9736ccc22ec7963e6e569633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180613fd06023913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061118c575061118b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611dae565b5b6111e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613f886026913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6112dc338261208b565b6112e557600080fd5b6112f0838383612120565b505050565b611334828260006040519080825280601f01601f19166020018201604052801561132e5781602001600182028038833980820191505090505b506113ab565b5050565b600061134383611703565b821061134e57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061139857fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613ff3603d913960400191505060405180910390fd5b6114618383612144565b61146a82612165565b6001905092915050565b61148f83838360405180602001604052806000815250611cc1565b505050565b600061149e6112c5565b82106114a957600080fd5b600882815481106114b657fe5b90600052602060002001549050919050565b60006114d2613d28565b60405180606001604052806040518060400160405280896000600281106114f557fe5b602002015181526020018960016002811061150c57fe5b60200201518152508152602001604051806040016040528060405180604001604052808a60006002811061153c57fe5b602002015160006002811061154d57fe5b602002015181526020018a60006002811061156457fe5b602002015160016002811061157557fe5b6020020151815250815260200160405180604001604052808a60016002811061159a57fe5b60200201516000600281106115ab57fe5b602002015181526020018a6001600281106115c257fe5b60200201516001600281106115d357fe5b602002015181525081525081526020016040518060400160405280876000600281106115fb57fe5b602002015181526020018760016002811061161257fe5b60200201518152508152509050606060026040519080825280602002602001820160405280156116515781602001602082028038833980820191505090505b50905060008090505b60028110156116995784816002811061166f57fe5b602002015182828151811061168057fe5b602002602001018181525050808060010191505061165a565b5060006116a682846122b6565b14156116b7576001925050506116be565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061174c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612428565b9050919050565b6000848484846040516020018085600260200280838360005b8381101561178757808201518184015260208101905061176c565b505050509050018460026000925b818410156117db5782846020020151600260200280838360005b838110156117ca5780820151818401526020810190506117af565b505050509050019260010192611795565b9250505083600260200280838360005b838110156118065780820151818401526020810190506117eb565b5050505090500182600260200280838360005b83811015611834578082015181840152602081019050611819565b505050509050019450505050506040516020818303038152906040528051906020012090506013600082815260200190815260200160002060010160149054906101000a900460ff16156118f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468697320736f6c7574696f6e20616c7265616479206578697374730000000081525060200191505060405180910390fd5b60006118fe868686866114c8565b905080611973576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50726f6f66206973206e6f742076616c6964000000000000000000000000000081525060200191505060405180910390fd5b60405180606001604052808381526020018973ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050508160146000898152602001908152602001600020819055507fa8348bf22f24dfdfbd206656d9911e021b39e58b4011b53045a11814d6b264a0828989604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b2557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b601360006014600084815260200190815260200160002054815260200190815260200160002060010160149054906101000a900460ff16611cb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806140306023913960400191505060405180910390fd5b611cbc82826113b0565b505050565b611ccc8484846112d2565b611cd884848484612436565b611ce157600080fd5b50505050565b6060611cf28261261f565b611cfb57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611da25780601f10611d7757610100808354040283529160200191611da2565b820191906000526020600020905b815481529060010190602001808311611d8557829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ee7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613ff3603d913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f506c656173652075736520612076616c6964206164647265737300000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb54f69a22c2850907e06f929b4b7654011d5f09ec1d99bfe9be09589c7feed518183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600080612097836116c6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210657508373ffffffffffffffffffffffffffffffffffffffff166120ee84610ff1565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211757506121168185611dae565b5b91505092915050565b61212b838383612691565b612135838261297e565b61213f8282612b1c565b505050565b61214e8282612be3565b6121588282612b1c565b61216181612d3a565b5050565b61216e8161261f565b6121e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5468697320746f6b656e20686173206e6f74206265656e206d696e746564000081525060200191505060405180910390fd5b61228c60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122795780601f1061224e57610100808354040283529160200191612279565b820191906000526020600020905b81548152906001019060200180831161225c57829003601f168201915b505050505061228783612d86565b612eb3565b6012600083815260200190815260200160002090805190602001906122b2929190613d5b565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506122e4613ddb565b6122ec612ef7565b905080608001515160018651011461230357600080fd5b61230b613e22565b6040518060400160405280600081526020016000815250905060008090505b86518110156123a1578387828151811061234057fe5b60200260200101511061235257600080fd5b6123928261238d8560800151600185018151811061236c57fe5b60200260200101518a858151811061238057fe5b6020026020010151613344565b6133d6565b9150808060010191505061232a565b506123c48183608001516000815181106123b757fe5b60200260200101516133d6565b905061240a856000015186602001516123dc84613487565b85604001516123ee8a60400151613487565b87606001516124008960000151613487565b8960200151613521565b61241a5760019350505050612422565b600093505050505b92915050565b600081600001549050919050565b60006124578473ffffffffffffffffffffffffffffffffffffffff16613685565b6124645760019050612617565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561253f578082015181840152602081019050612524565b50505050905090810190601f16801561256c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561258e57600080fd5b505af11580156125a2573d6000803e3d6000fd5b505050506040513d60208110156125b857600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612748576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613f566032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156127eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506c656173652070726f7669646520612076616c69642061646472657373000081525060200191505060405180910390fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128d7600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136d0565b61291e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136f3565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006129d66001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061370990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612ac3576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612a4357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612a9b57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612b159190613e3c565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612bec8161261f565b15612c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613fae6022913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612cdb600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136f3565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612dce576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612eae565b600082905060005b60008214612df8578080600101915050600a8281612df057fe5b049150612dd6565b6060816040519080825280601f01601f191660200182016040528015612e2d5781602001600182028038833980820191505090505b50905060006001830390505b60008614612ea657600a8681612e4b57fe5b0660300160f81b82828060019003935081518110612e6557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612e9e57fe5b049550612e39565b819450505050505b919050565b6060612eef8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613753565b905092915050565b612eff613ddb565b60405180604001604052807f1603a09dbacc2f6f3bac21f99ce40fd10bae12341f436ee54ff2f2c43f5ab8eb81526020017f224681030f757d9c1f78a058d7475f0aa359ca2f32b71c2b8c55679f29d9e9498152508160000181905250604051806040016040528060405180604001604052807f1db12b72a12c4422fe8bdf1ddced23b2b1a4acefc9c936efa147981a55adfb9981526020017f0376a05a46a3b52cf2df07f6865e4338294d9db42fad615f67803416ae11d056815250815260200160405180604001604052807f12d057bd105b03ecfa5af22819f25a66651f3d6a76f794dd9099daffbd388fb481526020017f06b2cfc7f5728ba01f98c98395c5050b9d12d76059bef63146069a1d01aeab0f8152508152508160200181905250604051806040016040528060405180604001604052807f28e12e015cb23eee5956c3075f7c01d382f8c27266e417f1903764dc056ef16381526020017f1edbf0f593e0bd6bd8c121cf26782b7ce1d3069e9d7b214926d54430b7229fcb815250815260200160405180604001604052807e22c1f45cd308210ff881e045c4d7938382aa2e3af2fc341ded856c5a4c50b681526020017f11e919dd55943e82816eb75ad2959633275cdb85506d63b5ad2581ea059929998152508152508160400181905250604051806040016040528060405180604001604052807f1e20b73985a33bd83cdd55a6c51634493e76be1faa9d70bcaaf6c13cb11e4d6781526020017f2cc1c3a5f78d269b052aacd68e950e8d7c08166e403f356b0d7b2fd98c8411fd815250815260200160405180604001604052807f030b9afd00f7a2ab58a3af3de20fecc721ae3ff004e8e0f26e64a0f1d253219081526020017f0d6c650f6f428dd612243d3f6cae3ae488e459480580a051b58ad0675bfbdaab815250815250816060018190525060036040519080825280602002602001820160405280156131e557816020015b6131d2613e68565b8152602001906001900390816131ca5790505b50816080018190525060405180604001604052807f04824d51fd942425eb07dea90291754cad5bb3c7eb77bb6dd6944877b619afba81526020017f2498dca6359ad2d544b4d4f2880cf043744088b5ec276a42ae046f9b06029284815250816080015160008151811061325457fe5b602002602001018190525060405180604001604052807f1918cfb0fbc27e4a4827e462993d2be2cfd0d7170bb11029fe7f67452a88ee4481526020017f112662dfc579745d77571f75632331ab97f7e8beb30a88f5524ac9d92b228f2b81525081608001516001815181106132c557fe5b602002602001018190525060405180604001604052807f1416c13d8232c3b8211fd2fc095799a79e230aa884868e7dd65173d69fa6d72b81526020017f05b910a5baf74b6ad42609bc1d559dc891d440ce2d00e91a920dea6fccb47bbf815250816080015160028151811061333657fe5b602002602001018190525090565b61334c613e22565b613354613e82565b83600001518160006003811061336657fe5b60200201818152505083602001518160016003811061338157fe5b602002018181525050828160026003811061339857fe5b602002018181525050600060608360808460076107d05a03fa905080600081146133c1576133c3565bfe5b50806133ce57600080fd5b505092915050565b6133de613e22565b6133e6613ea4565b8360000151816000600481106133f857fe5b60200201818152505083602001518160016004811061341357fe5b60200201818152505082600001518160026004811061342e57fe5b60200201818152505082602001518160036004811061344957fe5b602002018181525050600060608360c08460066107d05a03fa9050806000811461347257613474565bfe5b508061347f57600080fd5b505092915050565b61348f613e22565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156134cc575060008360200151145b156134f057604051806040016040528060008152602001600081525091505061351c565b6040518060400160405280846000015181526020018285602001518161351257fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561356057816020015b61354d613e68565b8152602001906001900390816135455790505b509050606060046040519080825280602002602001820160405280156135a057816020015b61358d613ec6565b8152602001906001900390816135855790505b5090508a826000815181106135b157fe5b602002602001018190525088826001815181106135ca57fe5b602002602001018190525086826002815181106135e357fe5b602002602001018190525084826003815181106135fc57fe5b6020026020010181905250898160008151811061361557fe5b6020026020010181905250878160018151811061362e57fe5b6020026020010181905250858160028151811061364757fe5b6020026020010181905250838160038151811061366057fe5b60200260200101819052506136758282613a15565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156136c757506000801b8214155b92505050919050565b6136e86001826000015461370990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061374b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613c68565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156137af5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613834578881815181106137db57fe5b602001015160f81c60f81b8383806001019450815181106137f857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506137c6565b600090505b87518110156138a75787818151811061384e57fe5b602001015160f81c60f81b83838060010194508151811061386b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613839565b600090505b865181101561391a578681815181106138c157fe5b602001015160f81c60f81b8383806001019450815181106138de57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506138ac565b600090505b855181101561398d5785818151811061393457fe5b602001015160f81c60f81b83838060010194508151811061395157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061391f565b600090505b8451811015613a00578481815181106139a757fe5b602001015160f81c60f81b8383806001019450815181106139c457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613992565b82995050505050505050505095945050505050565b60008151835114613a2557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613a645781602001602082028038833980820191505090505b50905060008090505b83811015613c0a57868181518110613a8157fe5b602002602001015160000151826000600684020181518110613a9f57fe5b602002602001018181525050868181518110613ab757fe5b602002602001015160200151826001600684020181518110613ad557fe5b602002602001018181525050858181518110613aed57fe5b602002602001015160000151600160028110613b0557fe5b6020020151826002600684020181518110613b1c57fe5b602002602001018181525050858181518110613b3457fe5b602002602001015160000151600060028110613b4c57fe5b6020020151826003600684020181518110613b6357fe5b602002602001018181525050858181518110613b7b57fe5b602002602001015160200151600160028110613b9357fe5b6020020151826004600684020181518110613baa57fe5b602002602001018181525050858181518110613bc257fe5b602002602001015160200151600060028110613bda57fe5b6020020151826005600684020181518110613bf157fe5b6020026020010181815250508080600101915050613a6d565b50613c13613eec565b6000602082602086026020860160086107d05a03fa90508060008114613c3857613c3a565bfe5b5080613c4557600080fd5b600082600060018110613c5457fe5b602002015114159550505050505092915050565b6000838311158290613d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613cda578082015181840152602081019050613cbf565b50505050905090810190601f168015613d075780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060600160405280613d3b613e68565b8152602001613d48613ec6565b8152602001613d55613e68565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613d9c57805160ff1916838001178555613dca565b82800160010185558215613dca579182015b82811115613dc9578251825591602001919060010190613dae565b5b509050613dd79190613f0e565b5090565b6040518060a00160405280613dee613e68565b8152602001613dfb613ec6565b8152602001613e08613ec6565b8152602001613e15613ec6565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b815481835581811115613e6357818360005260206000209182019101613e629190613f0e565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060400160405280613ed9613f33565b8152602001613ee6613f33565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b613f3091905b80821115613f2c576000816000905550600101613f14565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe54686520616464726573732070726f7669646564206973206e6f7420746865206f776e6572206f662074686520746f6b656e5468697320617070726f76616c206f7065726174696f6e206973206e6f7420616c6c6f7765645468697320746f6b656e2068617320616c7265616479206265656e206d696e74656454686973206164647265737320616c7265616479206f776e732074686520746f6b656e546869732066756e6374696f6e2063616e206265206f6e6c792063616c6c656420627920746865206f776e6572206f662074686520636f6e74726163745468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564a265627a7a723158203d46ec87b989fe836b9bd3da895f9fe426a0d4dbb65709b26f77d0e8c15df49964736f6c63430005100032",
  "sourceMap": "281:1595:6:-;;;19894:283:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:10;666:6;;:19;;;;;;;;;;;;;;;;;;2108:5;2098:7;;:15;;;;;;;;;;;;;;;;;;3061:40;2658:10;3080:20;;3061:18;;;:40;;:::i;:::-;5207;5081:10;5226:20;;5207:18;;;:40;;:::i;:::-;12611:51;12217:10;12630:31;;12611:18;;;:51;;:::i;:::-;20043:4;20035:5;:12;;;;;;;;;;;;:::i;:::-;;20067:6;20057:7;:16;;;;;;;;;;;;:::i;:::-;;20099:12;20083:13;:28;;;;;;;;;;;;:::i;:::-;;20121:49;19705:10;20140:29;;20121:18;;;:49;;:::i;:::-;19894:283;;;281:1595:6;;3411:158:4;3501:10;3486:25;;:11;:25;;;;;3478:34;;;;;;3558:4;3522:20;:33;3543:11;3522:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3411:158;:::o;281:1595:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "281:1595:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;281:1595:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:133:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3199:133:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1810:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1810:172:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;6405:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6405:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5776:623;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5776:623:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13376:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7544:179;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7544:179:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14799:122:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14799:122:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14799:122:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14799:122:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14799:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14799:122:5;;;;;;;;;;;;;;;:::i;:::-;;13042:182:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13042:182:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14927:166:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14927:166:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14927:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14927:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14927:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14927:166:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14927:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14927:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14927:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14927:166:5;;;;;;;;;;;;;;;:::i;:::-;;21835:159:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21835:159:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7729:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7729:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13807:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13807:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9463:612:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9463:612:8;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9463:612:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9463:612:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9463:612:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9463:612:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5546:157:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5546:157:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5260:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5260:280:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;918:544:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;918:544:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;918:544:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;918:544:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;918:544:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;918:544:6;;;;;;;;;;;;;;:::i;:::-;;451:78:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6859:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6859:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1689:184:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1689:184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7867:211:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7867:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7867:211:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7867:211:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7867:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7867:211:4;;;;;;;;;;;;;;;:::i;:::-;;20265:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20265:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20265:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7393:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7393:145:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1000:383;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1000:383:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3199:133;3269:4;3292:20;:33;3313:11;3292:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3285:40;;3199:133;;;:::o;1810:172::-;849:6;;;;;;;;;;;837:18;;:10;:18;;;829:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1879:10;1869:7;;:20;;;;;;;;;;;;;;;;;;1903:7;;;;;;;;;;;1899:76;;;1917:22;1928:10;1917:22;;;;;;;;;;;;;;;;;;;;;;1899:76;;;1951:24;1964:10;1951:24;;;;;;;;;;;;;;;;;;;;;;1899:76;1810:172;:::o;6405:162::-;6464:7;6536:15;:24;6552:7;6536:24;;;;;;;;;;;;;;;;;;;;;6529:31;;6405:162;;;:::o;5776:623::-;5941:2;5919:24;;:11;:20;5931:7;5919:20;;;;;;;;;;;;;;;;;;;;;:24;;;;5911:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6122:10;6100:32;;:11;:20;6112:7;6100:20;;;;;;;;;;;;;;;;;;;;;:32;;;:75;;;;6134:41;6151:11;:20;6163:7;6151:20;;;;;;;;;;;;;;;;;;;;;6172:2;6134:16;:41::i;:::-;6100:75;6092:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6302:2;6275:15;:24;6291:7;6275:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6383:7;6380:2;6350:41;;6359:11;:20;6371:7;6359:20;;;;;;;;;;;;;;;;;;;;;6350:41;;;;;;;;;;;;5776:623;;:::o;13376:94::-;13420:7;13446:10;:17;;;;13439:24;;13376:94;:::o;7544:179::-;7634:39;7653:10;7665:7;7634:18;:39::i;:::-;7626:48;;;;;;7684:32;7698:4;7704:2;7708:7;7684:13;:32::i;:::-;7544:179;;;:::o;14799:122:5:-;14874:40;14885:5;14892:7;14911:1;14901:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14901:12:5;;;;14874:10;:40::i;:::-;14799:122;;:::o;13042:182:4:-;13122:7;13157:16;13167:5;13157:9;:16::i;:::-;13149:5;:24;13141:33;;;;;;13191:12;:19;13204:5;13191:19;;;;;;;;;;;;;;;13211:5;13191:26;;;;;;;;;;;;;;;;13184:33;;13042:182;;;;:::o;14927:166:5:-;;;;:::o;21835:159:4:-;21903:4;849:6;;;;;;;;;;;837:18;;:10;:18;;;829:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21918:17;21924:2;21927:7;21918:5;:17::i;:::-;21945:21;21958:7;21945:12;:21::i;:::-;21983:4;21976:11;;21835:159;;;;:::o;7729:132::-;7815:39;7832:4;7838:2;7842:7;7815:39;;;;;;;;;;;;:16;:39::i;:::-;7729:132;;;:::o;13807:148::-;13865:7;13900:13;:11;:13::i;:::-;13892:5;:21;13884:30;;;;;;13931:10;13942:5;13931:17;;;;;;;;;;;;;;;;13924:24;;13807:148;;;:::o;9463:612:8:-;9581:6;9599:18;;:::i;:::-;9620:166;;;;;;;;9639:27;;;;;;;;9655:1;9657;9655:4;;;;;;;;;;;9639:27;;;;9661:1;9663;9661:4;;;;;;;;;;;9639:27;;;9620:166;;;;9680:55;;;;;;;;;;;;;;;;9697:1;9699;9697:4;;;;;;;;;;;9702:1;9697:7;;;;;;;;;;;9680:55;;;;9706:1;9708;9706:4;;;;;;;;;;;9711:1;9706:7;;;;;;;;;;;9680:55;;;;;;;;;;;;;;;9717:1;9719;9717:4;;;;;;;;;;;9722:1;9717:7;;;;;;;;;;;9680:55;;;;9726:1;9728;9726:4;;;;;;;;;;;9731:1;9726:7;;;;;;;;;;;9680:55;;;;;;9620:166;;;;9749:27;;;;;;;;9765:1;9767;9765:4;;;;;;;;;;;9749:27;;;;9771:1;9773;9771:4;;;;;;;;;;;9749:27;;;9620:166;;;9599:187;;9796:25;9835:1;9824:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9824:13:8;;;;9796:41;;9860:6;9869:1;9860:10;;9856:88;9876:12;9872:1;:16;9856:88;;;9925:5;9931:1;9925:8;;;;;;;;;;;9908:11;9920:1;9908:14;;;;;;;;;;;;;:25;;;;;9890:3;;;;;;;9856:88;;;;9987:1;9957:26;9964:11;9977:5;9957:6;:26::i;:::-;:31;9953:116;;;10011:4;10004:11;;;;;;9953:116;10053:5;10046:12;;;;9463:612;;;;;;;:::o;5546:157:4:-;5601:7;5676:11;:20;5688:7;5676:20;;;;;;;;;;;;;;;;;;;;;5669:27;;5546:157;;;:::o;5260:280::-;5315:7;5394:34;:17;:24;5412:5;5394:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5387:41;;5260:280;;;:::o;918:544:6:-;1067:13;1110:1;1112;1114;1116:5;1093:29;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1093:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1093:29:6;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1093:29:6;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1093:29:6;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1093:29:6;;;1083:40;;;;;;1067:56;;1142:12;:19;1155:5;1142:19;;;;;;;;;;;:26;;;;;;;;;;;;1141:27;1133:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:13;1226:21;1235:1;1237;1239;1241:5;1226:8;:21::i;:::-;1210:37;;1265:8;1257:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:31;;;;;;;;1337:5;1328:31;;;;1343:10;1328:31;;;;;;1354:4;1328:31;;;;;1306:12;:19;1319:5;1306:19;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:5;1369:9;:18;1379:7;1369:18;;;;;;;;;;;:26;;;;1410:37;1422:5;1428:10;1439:7;1410:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:544;;;;;;;;:::o;451:78:4:-;491:7;516:6;;;;;;;;;;;509:13;;451:78;:::o;6859:213::-;6944:10;6938:16;;:2;:16;;;;6930:25;;;;;;7002:8;6965:18;:30;6984:10;6965:30;;;;;;;;;;;;;;;:34;6996:2;6965:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7052:2;7025:40;;7040:10;7025:40;;;7056:8;7025:40;;;;;;;;;;;;;;;;;;;;;;6859:213;;:::o;1689:184:6:-;1760:12;:32;1773:9;:18;1783:7;1773:18;;;;;;;;;;;;1760:32;;;;;;;;;;;:39;;;;;;;;;;;;1752:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:17;1854:2;1858:7;1849:4;:17::i;:::-;;1689:184;;:::o;7867:211:4:-;7973:31;7986:4;7992:2;7996:7;7973:12;:31::i;:::-;8022:48;8045:4;8051:2;8055:7;8064:5;8022:22;:48::i;:::-;8014:57;;;;;;7867:211;;;;:::o;20265:151::-;20323:13;20356:16;20364:7;20356;:16::i;:::-;20348:25;;;;;;20390:10;:19;20401:7;20390:19;;;;;;;;;;;20383:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20265:151;;;:::o;7393:145::-;7473:4;7496:18;:25;7515:5;7496:25;;;;;;;;;;;;;;;:35;7522:8;7496:35;;;;;;;;;;;;;;;;;;;;;;;;;7489:42;;7393:145;;;;:::o;1000:383::-;849:6;;;;;;;;;;;837:18;;:10;:18;;;829:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1231:1;1213:20;;:8;:20;;;;1205:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:16;1292:6;;;;;;;;;;;1273:25;;1317:8;1308:6;;:17;;;;;;;;;;;;;;;;;;1340:36;1358:8;1367;1340:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;931:1;1000:383;:::o;8784:246::-;8869:4;8885:13;8901:16;8909:7;8901;:16::i;:::-;8885:32;;8946:5;8935:16;;:7;:16;;;:51;;;;8979:7;8955:31;;:20;8967:7;8955:11;:20::i;:::-;:31;;;8935:51;:87;;;;8990:32;9007:5;9014:7;8990:16;:32::i;:::-;8935:87;8927:96;;;8784:246;;;;:::o;14330:239::-;14415:38;14435:4;14441:2;14445:7;14415:19;:38::i;:::-;14464:47;14497:4;14503:7;14464:32;:47::i;:::-;14522:40;14550:2;14554:7;14522:27;:40::i;:::-;14330:239;;;:::o;14824:196::-;14887:24;14899:2;14903:7;14887:11;:24::i;:::-;14922:40;14950:2;14954:7;14922:27;:40::i;:::-;14973;15005:7;14973:31;:40::i;:::-;14824:196;;:::o;20887:::-;20952:16;20960:7;20952;:16::i;:::-;20944:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21034:42;21044:13;21034:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21058:17;21067:7;21058:8;:17::i;:::-;21034:9;:42::i;:::-;21012:10;:19;21023:7;21012:19;;;;;;;;;;;:64;;;;;;;;;;;;:::i;:::-;;20887:196;:::o;8537:921:8:-;8617:4;8633:26;8662:77;8633:106;;8749:22;;:::i;:::-;8774:14;:12;:14::i;:::-;8749:39;;8826:2;:12;;;:19;8821:1;8806:5;:12;:16;:39;8798:48;;;;;;8903:27;;:::i;:::-;8933:21;;;;;;;;8949:1;8933:21;;;;8952:1;8933:21;;;8903:51;;8969:6;8978:1;8969:10;;8964:197;8985:5;:12;8981:1;:16;8964:197;;;9037:18;9026:5;9032:1;9026:8;;;;;;;;;;;;;;:29;9018:38;;;;;;9077:73;9094:4;9100:49;9119:2;:12;;;9136:1;9132;:5;9119:19;;;;;;;;;;;;;;9140:5;9146:1;9140:8;;;;;;;;;;;;;;9100:18;:49::i;:::-;9077:16;:73::i;:::-;9070:80;;8999:3;;;;;;;8964:197;;;;9177:39;9194:4;9200:2;:12;;;9213:1;9200:15;;;;;;;;;;;;;;9177:16;:39::i;:::-;9170:46;;9230:193;9265:5;:7;;;9274:5;:7;;;9296:20;9311:4;9296:14;:20::i;:::-;9318:2;:8;;;9341:23;9356:5;:7;;;9341:14;:23::i;:::-;9366:2;:8;;;9389:24;9404:2;:8;;;9389:14;:24::i;:::-;9415:2;:7;;;9230:20;:193::i;:::-;9226:207;;9432:1;9425:8;;;;;;;9226:207;9450:1;9443:8;;;;;8537:921;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11062:347:4:-;11183:4;11208:15;:2;:13;;;:15::i;:::-;11203:58;;11246:4;11239:11;;;;11203:58;11271:13;11303:2;11287:36;;;11324:10;11336:4;11342:7;11351:5;11287:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11287:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11287:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11287:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11287:70:4;;;;;;;;;;;;;;;;11271:86;;4214:10;11385:16;;11375:26;;;:6;:26;;;;11367:35;;;11062:347;;;;;;;:::o;8272:152::-;8329:4;8345:13;8361:11;:20;8373:7;8361:20;;;;;;;;;;;;;;;;;;;;;8345:36;;8415:1;8398:19;;:5;:19;;;;8391:26;;;8272:152;;;:::o;9827:707::-;10006:4;9984:26;;:11;:20;9996:7;9984:20;;;;;;;;;;;;;;;;;;;;;:26;;;9976:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10156:1;10144:14;;:2;:14;;;;10136:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10263:1;10228:15;:24;10244:7;10228:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10367:2;10344:11;:20;10356:7;10344:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10379:35;:17;:23;10397:4;10379:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10424:33;:17;:21;10442:2;10424:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10519:7;10516:2;10502:25;;10511:4;10502:25;;;;;;;;;;;;9827:707;;;:::o;16796:1128::-;17058:22;17083:32;17113:1;17083:12;:18;17096:4;17083:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17058:57;;17125:18;17146:17;:26;17164:7;17146:26;;;;;;;;;;;;17125:47;;17290:14;17276:10;:28;17272:323;;17320:19;17342:12;:18;17355:4;17342:18;;;;;;;;;;;;;;;17361:14;17342:34;;;;;;;;;;;;;;;;17320:56;;17424:11;17391:12;:18;17404:4;17391:18;;;;;;;;;;;;;;;17410:10;17391:30;;;;;;;;;;;;;;;:44;;;;17540:10;17507:17;:30;17525:11;17507:30;;;;;;;;;;;:43;;;;17272:323;;17681:12;:18;17694:4;17681:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16796:1128;;;;:::o;15642:183::-;15755:12;:16;15768:2;15755:16;;;;;;;;;;;;;;;:23;;;;15726:17;:26;15744:7;15726:26;;;;;;;;;;;:52;;;;15788:12;:16;15801:2;15788:16;;;;;;;;;;;;;;;15810:7;15788:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15788:30:4;;;;;;;;;;;;;;;;;;;;;;15642:183;;:::o;9187:441::-;9337:16;9345:7;9337;:16::i;:::-;9336:17;9328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9499:2;9476:11;:20;9488:7;9476:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9511:33;:17;:21;9529:2;9511:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9613:7;9610:2;9590:31;;9599:10;9590:31;;;;;;;;;;;;9187:441;;:::o;16020:161::-;16123:10;:17;;;;16096:15;:24;16112:7;16096:24;;;;;;;;;;;:44;;;;16150:10;16166:7;16150:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16150:24:4;;;;;;;;;;;;;;;;;;;;;;16020:161;:::o;43269:465:5:-;43319:27;43368:1;43362:2;:7;43358:48;;;43385:10;;;;;;;;;;;;;;;;;;;;;43358:48;43415:6;43424:2;43415:11;;43436:8;43454:66;43466:1;43461;:6;43454:66;;43483:5;;;;;;;43507:2;43502:7;;;;;;;;;43454:66;;;43529:17;43559:3;43549:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43549:14:5;;;;43529:34;;43573:6;43588:1;43582:3;:7;43573:16;;43599:100;43612:1;43606:2;:7;43599:100;;43662:2;43657;:7;;;;;;43652:2;:12;43641:25;;43629:4;43634:3;;;;;;;43629:9;;;;;;;;;;;:37;;;;;;;;;;;43686:2;43680:8;;;;;;;;;43599:100;;;43722:4;43708:19;;;;;;43269:465;;;;:::o;39710:166::-;39788:33;39840:29;39850:2;39854;39840:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39833:36;;39710:166;;;;:::o;6581:1951:8:-;6628:22;;:::i;:::-;6673:169;;;;;;;;6697:66;6673:169;;;;6774:66;6673:169;;;6662:2;:8;;:180;;;;6862:327;;;;;;;;;;;;;;;;6887:66;6862:327;;;;6964:66;6862:327;;;;;;;;;;;;;;;7043:66;6862:327;;;;7120:66;6862:327;;;;;;6852:2;:7;;:337;;;;7210:327;;;;;;;;;;;;;;;;7235:66;7210:327;;;;7312:66;7210:327;;;;;;;;;;;;;;;7391:66;7210:327;;;;7468:66;7210:327;;;;;;7199:2;:8;;:338;;;;7558:327;;;;;;;;;;;;;;;;7583:66;7558:327;;;;7660:66;7558:327;;;;;;;;;;;;;;;7739:66;7558:327;;;;7816:66;7558:327;;;;;;7547:2;:8;;:338;;;;7932:1;7910:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7895:2;:12;;:39;;;;7962:169;;;;;;;;7986:66;7962:169;;;;8063:66;7962:169;;;7944:2;:12;;;7957:1;7944:15;;;;;;;;;;;;;:187;;;;8159:169;;;;;;;;8183:66;8159:169;;;;8260:66;8159:169;;;8141:2;:12;;;8154:1;8141:15;;;;;;;;;;;;;:187;;;;8356:169;;;;;;;;8380:66;8356:169;;;;8457:66;8356:169;;;8338:2;:12;;;8351:1;8338:15;;;;;;;;;;;;;:187;;;;6581:1951;:::o;3082:454::-;3151:16;;:::i;:::-;3179:20;;:::i;:::-;3220:1;:3;;;3209:5;3215:1;3209:8;;;;;;;;;;:14;;;;;3244:1;:3;;;3233:5;3239:1;3233:8;;;;;;;;;;:14;;;;;3268:1;3257:5;3263:1;3257:8;;;;;;;;;;:12;;;;;3279;3383:4;3380:1;3374:4;3367:5;3364:1;3357:4;3350:5;3346:16;3335:53;3324:64;;3465:7;3478:1;3473:20;;;;3458:35;;3473:20;3482:9;3458:35;;3521:7;3512:17;;;;;;3082:454;;;;;;:::o;2432:493::-;2511:16;;:::i;:::-;2539:20;;:::i;:::-;2580:2;:4;;;2569:5;2575:1;2569:8;;;;;;;;;;:15;;;;;2605:2;:4;;;2594:5;2600:1;2594:8;;;;;;;;;;:15;;;;;2630:2;:4;;;2619:5;2625:1;2619:8;;;;;;;;;;:15;;;;;2655:2;:4;;;2644:5;2650:1;2644:8;;;;;;;;;;:15;;;;;2669:12;2773:4;2770:1;2764:4;2757:5;2754:1;2747:4;2740:5;2736:16;2725:53;2714:64;;2855:7;2868:1;2863:20;;;;2848:35;;2863:20;2872:9;2848:35;;2910:7;2902:16;;;;;;2432:493;;;;;;:::o;2041:340::-;2098:14;;:::i;:::-;2176:6;2185:77;2176:86;;2283:1;2276;:3;;;:8;:20;;;;;2295:1;2288;:3;;;:8;2276:20;2272:58;;;2317:13;;;;;;;;2325:1;2317:13;;;;2328:1;2317:13;;;2310:20;;;;;2272:58;2347:27;;;;;;;;2355:1;:3;;;2347:27;;;;2371:1;2365;:3;;;:7;;;;;;2360:1;:13;2347:27;;;2340:34;;;2041:340;;;;:::o;5678:552::-;5929:4;5945:19;5981:1;5967:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5945:38;;5993:19;6029:1;6015:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5993:38;;6049:2;6041;6044:1;6041:5;;;;;;;;;;;;;:10;;;;6069:2;6061;6064:1;6061:5;;;;;;;;;;;;;:10;;;;6089:2;6081;6084:1;6081:5;;;;;;;;;;;;;:10;;;;6109:2;6101;6104:1;6101:5;;;;;;;;;;;;;:10;;;;6129:2;6121;6124:1;6121:5;;;;;;;;;;;;;:10;;;;6149:2;6141;6144:1;6141:5;;;;;;;;;;;;;:10;;;;6169:2;6161;6164:1;6161:5;;;;;;;;;;;;;:10;;;;6189:2;6181;6184:1;6181:5;;;;;;;;;;;;;:10;;;;6208:15;6216:2;6220;6208:7;:15::i;:::-;6201:22;;;;5678:552;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40280:1020:5:-;40412:33;40457:16;40482:2;40457:28;;40495:16;40520:2;40495:28;;40533:16;40558:2;40533:28;;40571:16;40596:2;40571:28;;40609:16;40634:2;40609:28;;40647:19;40732:3;:10;40719:3;:10;40706:3;:10;40693:3;:10;40680:3;:10;:23;:36;:49;:62;40669:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40669:74:5;;;;40647:96;;40753:19;40781:5;40753:34;;40797:6;40806:1;40797:10;;40817:6;40826:1;40817:10;;40846:1;40842:5;;40837:78;40853:3;:10;40849:1;:14;40837:78;;;40898:3;40902:1;40898:6;;;;;;;;;;;;;;;;40884;40891:3;;;;;;40884:11;;;;;;;;;;;:20;;;;;;;;;;;40865:3;;;;;;;40837:78;;;40933:1;40929:5;;40924:78;40940:3;:10;40936:1;:14;40924:78;;;40985:3;40989:1;40985:6;;;;;;;;;;;;;;;;40971;40978:3;;;;;;40971:11;;;;;;;;;;;:20;;;;;;;;;;;40952:3;;;;;;;40924:78;;;41020:1;41016:5;;41011:78;41027:3;:10;41023:1;:14;41011:78;;;41072:3;41076:1;41072:6;;;;;;;;;;;;;;;;41058;41065:3;;;;;;41058:11;;;;;;;;;;;:20;;;;;;;;;;;41039:3;;;;;;;41011:78;;;41107:1;41103:5;;41098:78;41114:3;:10;41110:1;:14;41098:78;;;41159:3;41163:1;41159:6;;;;;;;;;;;;;;;;41145;41152:3;;;;;;41145:11;;;;;;;;;;;:20;;;;;;;;;;;41126:3;;;;;;;41098:78;;;41194:1;41190:5;;41185:78;41201:3;:10;41197:1;:14;41185:78;;;41246:3;41250:1;41246:6;;;;;;;;;;;;;;;;41232;41239:3;;;;;;41232:11;;;;;;;;;;;:20;;;;;;;;;;;41213:3;;;;;;;41185:78;;;41286:6;41272:21;;;;;;;;;;;40280:1020;;;;;;;:::o;3747:923:8:-;3829:4;3866:2;:9;3853:2;:9;:22;3845:31;;;;;;3886:13;3902:2;:9;3886:25;;3921:14;3949:1;3938:8;:12;3921:29;;3960:19;3993:9;3982:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3982:21:8;;;;3960:43;;4018:6;4027:1;4018:10;;4013:307;4034:8;4030:1;:12;4013:307;;;4090:2;4093:1;4090:5;;;;;;;;;;;;;;:7;;;4071:5;4085:1;4081;4077;:5;:9;4071:16;;;;;;;;;;;;;:26;;;;;4130:2;4133:1;4130:5;;;;;;;;;;;;;;:7;;;4111:5;4125:1;4121;4117;:5;:9;4111:16;;;;;;;;;;;;;:26;;;;;4170:2;4173:1;4170:5;;;;;;;;;;;;;;:7;;;4178:1;4170:10;;;;;;;;;;;4151:5;4165:1;4161;4157;:5;:9;4151:16;;;;;;;;;;;;;:29;;;;;4213:2;4216:1;4213:5;;;;;;;;;;;;;;:7;;;4221:1;4213:10;;;;;;;;;;;4194:5;4208:1;4204;4200;:5;:9;4194:16;;;;;;;;;;;;;:29;;;;;4256:2;4259:1;4256:5;;;;;;;;;;;;;;:7;;;4264:1;4256:10;;;;;;;;;;;4237:5;4251:1;4247;4243;:5;:9;4237:16;;;;;;;;;;;;;:29;;;;;4299:2;4302:1;4299:5;;;;;;;;;;;;;;:7;;;4307:1;4299:10;;;;;;;;;;;4280:5;4294:1;4290;4286;:5;:9;4280:16;;;;;;;;;;;;;:29;;;;;4044:3;;;;;;;4013:307;;;;4329:18;;:::i;:::-;4357:12;4490:4;4485:3;4478:4;4467:9;4463:20;4456:4;4449:5;4445:16;4442:1;4435:4;4428:5;4424:16;4413:82;4402:93;;4572:7;4585:1;4580:20;;;;4565:35;;4580:20;4589:9;4565:35;;4627:7;4619:16;;;;;;4662:1;4652:3;4656:1;4652:6;;;;;;;;;;;:11;;4645:18;;;;;;;3747:923;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;281:1595:6:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;281:1595:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;281:1595:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;281:1595:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;281:1595:6;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n// define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is TheCoolestToken, Verifier {\n    // define a solutions struct that can hold an index & an address\n    struct Solution{\n        bytes32 index;\n        address solAddres;\n        bool exists;\n    }\n\n    // define a mapping of the above struct\n    mapping(bytes32 => Solution) solutionList;\n\n    // define a mapping to store unique solutions submitted\n    mapping(uint256 => bytes32) indexList;\n\n    // Create an event to emit when a solution is added\n    event newSolution(bytes32 index, address solAddress, uint256 tokenId);\n\n    // Create a function to add the solutions to the array and emit the event\n    function addSol(address solAddress, uint256 tokenId, uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[2] memory input) public {\n        bytes32 index = keccak256(abi.encodePacked(a,b,c,input));\n        require(!solutionList[index].exists,\"This solution already exists\");\n        bool solValid = verifyTx(a,b,c,input);\n        require(solValid, \"Proof is not valid\");\n        solutionList[index] = Solution(index,solAddress,true);\n        indexList[tokenId] = index;\n        emit newSolution(index,solAddress,tokenId);        \n    }\n\n    \n    // Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function solMint(address to, uint256 tokenId) public {\n        require(solutionList[indexList[tokenId]].exists, \"This solution has already been used\");\n        mint(to, tokenId);\n    }\n\n}\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/mnt/c/Users/Alejandro/Documents/Programacion/Blockchain/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7811
      ]
    },
    "id": 7812,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7675,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7676,
        "nodeType": "ImportDirective",
        "scope": 7812,
        "sourceUnit": 1406,
        "src": "127:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7677,
        "nodeType": "ImportDirective",
        "scope": 7812,
        "sourceUnit": 9774,
        "src": "158:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7678,
              "name": "TheCoolestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1405,
              "src": "312:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TheCoolestToken_$1405",
                "typeString": "contract TheCoolestToken"
              }
            },
            "id": 7679,
            "nodeType": "InheritanceSpecifier",
            "src": "312:15:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7680,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9773,
              "src": "329:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$9773",
                "typeString": "contract Verifier"
              }
            },
            "id": 7681,
            "nodeType": "InheritanceSpecifier",
            "src": "329:8:6"
          }
        ],
        "contractDependencies": [
          401,
          465,
          511,
          992,
          1290,
          1376,
          1405,
          7673,
          9773
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7811,
        "linearizedBaseContracts": [
          7811,
          9773,
          1405,
          1376,
          7673,
          1290,
          992,
          511,
          465,
          401
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7688,
            "members": [
              {
                "constant": false,
                "id": 7683,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7688,
                "src": "438:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7682,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7685,
                "name": "solAddres",
                "nodeType": "VariableDeclaration",
                "scope": 7688,
                "src": "461:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7684,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "461:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7687,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7688,
                "src": "488:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7686,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7811,
            "src": "413:93:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7692,
            "name": "solutionList",
            "nodeType": "VariableDeclaration",
            "scope": 7811,
            "src": "556:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7688_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7691,
              "keyType": {
                "id": 7689,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "556:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7688_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7690,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7688,
                "src": "575:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7688_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7696,
            "name": "indexList",
            "nodeType": "VariableDeclaration",
            "scope": 7811,
            "src": "664:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7695,
              "keyType": {
                "id": 7693,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "672:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "664:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7694,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "683:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7704,
            "name": "newSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7698,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7704,
                  "src": "782:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7697,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7700,
                  "indexed": false,
                  "name": "solAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7704,
                  "src": "797:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7702,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7704,
                  "src": "817:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "781:52:6"
            },
            "src": "764:70:6"
          },
          {
            "body": {
              "id": 7786,
              "nodeType": "Block",
              "src": "1057:405:6",
              "statements": [
                {
                  "assignments": [
                    7730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7730,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 7786,
                      "src": "1067:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7729,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1067:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7740,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7734,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7712,
                            "src": "1110:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7735,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7718,
                            "src": "1112:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7736,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7722,
                            "src": "1114:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7737,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7726,
                            "src": "1116:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7732,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9775,
                            "src": "1093:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1093:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1093:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7731,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9782,
                      "src": "1083:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1067:56:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1141:27:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7742,
                              "name": "solutionList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7692,
                              "src": "1142:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7688_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7744,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7743,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7730,
                              "src": "1155:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1142:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7688_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7745,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7687,
                          "src": "1142:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e20616c726561647920657869737473",
                        "id": 7747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1169:30:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2e9be445a363252433a659adbddcd89853ec8cd434c03bf7c7bcb7f145cf8d8",
                          "typeString": "literal_string \"This solution already exists\""
                        },
                        "value": "This solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2e9be445a363252433a659adbddcd89853ec8cd434c03bf7c7bcb7f145cf8d8",
                          "typeString": "literal_string \"This solution already exists\""
                        }
                      ],
                      "id": 7741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9791,
                        9792
                      ],
                      "referencedDeclaration": 9792,
                      "src": "1133:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7749,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:67:6"
                },
                {
                  "assignments": [
                    7751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7751,
                      "name": "solValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 7786,
                      "src": "1210:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7750,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1210:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7758,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7753,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7712,
                        "src": "1235:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7754,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7718,
                        "src": "1237:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7755,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7722,
                        "src": "1239:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7756,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7726,
                        "src": "1241:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7752,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9772,
                      "src": "1226:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                      }
                    },
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1210:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7760,
                        "name": "solValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7751,
                        "src": "1265:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f66206973206e6f742076616c6964",
                        "id": 7761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1275:20:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        },
                        "value": "Proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        }
                      ],
                      "id": 7759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9791,
                        9792
                      ],
                      "referencedDeclaration": 9792,
                      "src": "1257:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7763,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:39:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7764,
                        "name": "solutionList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7692,
                        "src": "1306:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7688_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7766,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7765,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "1319:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1306:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7688_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7768,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7730,
                          "src": "1337:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7769,
                          "name": "solAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7706,
                          "src": "1343:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1354:4:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7767,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7688,
                        "src": "1328:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7688_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1328:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7688_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1306:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7688_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7773,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:53:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7774,
                        "name": "indexList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7696,
                        "src": "1369:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7776,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7775,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "1379:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1369:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7777,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7730,
                      "src": "1390:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1369:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7779,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:26:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7781,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7730,
                        "src": "1422:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7782,
                        "name": "solAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7706,
                        "src": "1428:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7783,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "1439:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7780,
                      "name": "newSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7704,
                      "src": "1410:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 7784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7785,
                  "nodeType": "EmitStatement",
                  "src": "1405:42:6"
                }
              ]
            },
            "documentation": null,
            "id": 7787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7706,
                  "name": "solAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7787,
                  "src": "934:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7708,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7787,
                  "src": "954:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7712,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7787,
                  "src": "971:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7709,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "971:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7711,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "976:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "971:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7718,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7787,
                  "src": "989:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7713,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "989:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7715,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "989:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7717,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "997:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "989:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7722,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7787,
                  "src": "1010:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7719,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1010:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7721,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1015:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1010:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7726,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7787,
                  "src": "1028:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7723,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1028:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7725,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1028:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "933:116:6"
            },
            "returnParameters": {
              "id": 7728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:6"
            },
            "scope": 7811,
            "src": "918:544:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7809,
              "nodeType": "Block",
              "src": "1742:131:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7795,
                            "name": "solutionList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7692,
                            "src": "1760:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7688_storage_$",
                              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7799,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7796,
                              "name": "indexList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7696,
                              "src": "1773:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 7798,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7797,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7791,
                              "src": "1783:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1773:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1760:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7688_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7687,
                        "src": "1760:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564",
                        "id": 7801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:37:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                          "typeString": "literal_string \"This solution has already been used\""
                        },
                        "value": "This solution has already been used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                          "typeString": "literal_string \"This solution has already been used\""
                        }
                      ],
                      "id": 7794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9791,
                        9792
                      ],
                      "referencedDeclaration": 9792,
                      "src": "1752:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1752:87:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7803,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:87:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7805,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7789,
                        "src": "1854:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7806,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7791,
                        "src": "1858:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7804,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "1849:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1849:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7808,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:17:6"
                }
              ]
            },
            "documentation": null,
            "id": 7810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "solMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7789,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1706:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7791,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7810,
                  "src": "1718:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1705:29:6"
            },
            "returnParameters": {
              "id": 7793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1742:0:6"
            },
            "scope": 7811,
            "src": "1689:184:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7812,
        "src": "281:1595:6"
      }
    ],
    "src": "0:1908:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7811
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 7675,
        "name": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "attributes": {
          "SourceUnit": 1406,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7812,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7676,
        "name": "ImportDirective",
        "src": "127:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 9774,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7812,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7677,
        "name": "ImportDirective",
        "src": "158:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            401,
            465,
            511,
            992,
            1290,
            1376,
            1405,
            7673,
            9773
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7811,
            9773,
            1405,
            1376,
            7673,
            1290,
            992,
            511,
            465,
            401
          ],
          "name": "SolnSquareVerifier",
          "scope": 7812
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "TheCoolestToken",
                  "referencedDeclaration": 1405,
                  "type": "contract TheCoolestToken"
                },
                "id": 7678,
                "name": "UserDefinedTypeName",
                "src": "312:15:6"
              }
            ],
            "id": 7679,
            "name": "InheritanceSpecifier",
            "src": "312:15:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 9773,
                  "type": "contract Verifier"
                },
                "id": 7680,
                "name": "UserDefinedTypeName",
                "src": "329:8:6"
              }
            ],
            "id": 7681,
            "name": "InheritanceSpecifier",
            "src": "329:8:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7811,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7688,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7682,
                    "name": "ElementaryTypeName",
                    "src": "438:7:6"
                  }
                ],
                "id": 7683,
                "name": "VariableDeclaration",
                "src": "438:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "solAddres",
                  "scope": 7688,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7684,
                    "name": "ElementaryTypeName",
                    "src": "461:7:6"
                  }
                ],
                "id": 7685,
                "name": "VariableDeclaration",
                "src": "461:17:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exists",
                  "scope": 7688,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7686,
                    "name": "ElementaryTypeName",
                    "src": "488:4:6"
                  }
                ],
                "id": 7687,
                "name": "VariableDeclaration",
                "src": "488:11:6"
              }
            ],
            "id": 7688,
            "name": "StructDefinition",
            "src": "413:93:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionList",
              "scope": 7811,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7689,
                    "name": "ElementaryTypeName",
                    "src": "564:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7688,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7690,
                    "name": "UserDefinedTypeName",
                    "src": "575:8:6"
                  }
                ],
                "id": 7691,
                "name": "Mapping",
                "src": "556:28:6"
              }
            ],
            "id": 7692,
            "name": "VariableDeclaration",
            "src": "556:41:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "indexList",
              "scope": 7811,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => bytes32)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => bytes32)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7693,
                    "name": "ElementaryTypeName",
                    "src": "672:7:6"
                  },
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7694,
                    "name": "ElementaryTypeName",
                    "src": "683:7:6"
                  }
                ],
                "id": 7695,
                "name": "Mapping",
                "src": "664:27:6"
              }
            ],
            "id": 7696,
            "name": "VariableDeclaration",
            "src": "664:37:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "newSolution"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7704,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7697,
                        "name": "ElementaryTypeName",
                        "src": "782:7:6"
                      }
                    ],
                    "id": 7698,
                    "name": "VariableDeclaration",
                    "src": "782:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "solAddress",
                      "scope": 7704,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7699,
                        "name": "ElementaryTypeName",
                        "src": "797:7:6"
                      }
                    ],
                    "id": 7700,
                    "name": "VariableDeclaration",
                    "src": "797:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "tokenId",
                      "scope": 7704,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7701,
                        "name": "ElementaryTypeName",
                        "src": "817:7:6"
                      }
                    ],
                    "id": 7702,
                    "name": "VariableDeclaration",
                    "src": "817:15:6"
                  }
                ],
                "id": 7703,
                "name": "ParameterList",
                "src": "781:52:6"
              }
            ],
            "id": 7704,
            "name": "EventDefinition",
            "src": "764:70:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSol",
              "scope": 7811,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solAddress",
                      "scope": 7787,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7705,
                        "name": "ElementaryTypeName",
                        "src": "934:7:6"
                      }
                    ],
                    "id": 7706,
                    "name": "VariableDeclaration",
                    "src": "934:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7787,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7707,
                        "name": "ElementaryTypeName",
                        "src": "954:7:6"
                      }
                    ],
                    "id": 7708,
                    "name": "VariableDeclaration",
                    "src": "954:15:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7787,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7709,
                            "name": "ElementaryTypeName",
                            "src": "971:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7710,
                            "name": "Literal",
                            "src": "976:1:6"
                          }
                        ],
                        "id": 7711,
                        "name": "ArrayTypeName",
                        "src": "971:7:6"
                      }
                    ],
                    "id": 7712,
                    "name": "VariableDeclaration",
                    "src": "971:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7787,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7713,
                                "name": "ElementaryTypeName",
                                "src": "989:4:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7714,
                                "name": "Literal",
                                "src": "994:1:6"
                              }
                            ],
                            "id": 7715,
                            "name": "ArrayTypeName",
                            "src": "989:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7716,
                            "name": "Literal",
                            "src": "997:1:6"
                          }
                        ],
                        "id": 7717,
                        "name": "ArrayTypeName",
                        "src": "989:10:6"
                      }
                    ],
                    "id": 7718,
                    "name": "VariableDeclaration",
                    "src": "989:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7787,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7719,
                            "name": "ElementaryTypeName",
                            "src": "1010:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7720,
                            "name": "Literal",
                            "src": "1015:1:6"
                          }
                        ],
                        "id": 7721,
                        "name": "ArrayTypeName",
                        "src": "1010:7:6"
                      }
                    ],
                    "id": 7722,
                    "name": "VariableDeclaration",
                    "src": "1010:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7787,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7723,
                            "name": "ElementaryTypeName",
                            "src": "1028:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7724,
                            "name": "Literal",
                            "src": "1033:1:6"
                          }
                        ],
                        "id": 7725,
                        "name": "ArrayTypeName",
                        "src": "1028:7:6"
                      }
                    ],
                    "id": 7726,
                    "name": "VariableDeclaration",
                    "src": "1028:20:6"
                  }
                ],
                "id": 7727,
                "name": "ParameterList",
                "src": "933:116:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7728,
                "name": "ParameterList",
                "src": "1057:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7730
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "index",
                          "scope": 7786,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7729,
                            "name": "ElementaryTypeName",
                            "src": "1067:7:6"
                          }
                        ],
                        "id": 7730,
                        "name": "VariableDeclaration",
                        "src": "1067:13:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 9782,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7731,
                            "name": "Identifier",
                            "src": "1083:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 9775,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7732,
                                    "name": "Identifier",
                                    "src": "1093:3:6"
                                  }
                                ],
                                "id": 7733,
                                "name": "MemberAccess",
                                "src": "1093:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7712,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7734,
                                "name": "Identifier",
                                "src": "1110:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7718,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7735,
                                "name": "Identifier",
                                "src": "1112:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7722,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7736,
                                "name": "Identifier",
                                "src": "1114:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7726,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7737,
                                "name": "Identifier",
                                "src": "1116:5:6"
                              }
                            ],
                            "id": 7738,
                            "name": "FunctionCall",
                            "src": "1093:29:6"
                          }
                        ],
                        "id": 7739,
                        "name": "FunctionCall",
                        "src": "1083:40:6"
                      }
                    ],
                    "id": 7740,
                    "name": "VariableDeclarationStatement",
                    "src": "1067:56:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e2e9be445a363252433a659adbddcd89853ec8cd434c03bf7c7bcb7f145cf8d8",
                                  "typeString": "literal_string \"This solution already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                9791,
                                9792
                              ],
                              "referencedDeclaration": 9792,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7741,
                            "name": "Identifier",
                            "src": "1133:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exists",
                                  "referencedDeclaration": 7687,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7692,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutionList"
                                        },
                                        "id": 7742,
                                        "name": "Identifier",
                                        "src": "1142:12:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7730,
                                          "type": "bytes32",
                                          "value": "index"
                                        },
                                        "id": 7743,
                                        "name": "Identifier",
                                        "src": "1155:5:6"
                                      }
                                    ],
                                    "id": 7744,
                                    "name": "IndexAccess",
                                    "src": "1142:19:6"
                                  }
                                ],
                                "id": 7745,
                                "name": "MemberAccess",
                                "src": "1142:26:6"
                              }
                            ],
                            "id": 7746,
                            "name": "UnaryOperation",
                            "src": "1141:27:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468697320736f6c7574696f6e20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This solution already exists\"",
                              "value": "This solution already exists"
                            },
                            "id": 7747,
                            "name": "Literal",
                            "src": "1169:30:6"
                          }
                        ],
                        "id": 7748,
                        "name": "FunctionCall",
                        "src": "1133:67:6"
                      }
                    ],
                    "id": 7749,
                    "name": "ExpressionStatement",
                    "src": "1133:67:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7751
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solValid",
                          "scope": 7786,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7750,
                            "name": "ElementaryTypeName",
                            "src": "1210:4:6"
                          }
                        ],
                        "id": 7751,
                        "name": "VariableDeclaration",
                        "src": "1210:13:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 9772,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7752,
                            "name": "Identifier",
                            "src": "1226:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7712,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7753,
                            "name": "Identifier",
                            "src": "1235:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7718,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7754,
                            "name": "Identifier",
                            "src": "1237:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7722,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7755,
                            "name": "Identifier",
                            "src": "1239:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7726,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7756,
                            "name": "Identifier",
                            "src": "1241:5:6"
                          }
                        ],
                        "id": 7757,
                        "name": "FunctionCall",
                        "src": "1226:21:6"
                      }
                    ],
                    "id": 7758,
                    "name": "VariableDeclarationStatement",
                    "src": "1210:37:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                                  "typeString": "literal_string \"Proof is not valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                9791,
                                9792
                              ],
                              "referencedDeclaration": 9792,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7759,
                            "name": "Identifier",
                            "src": "1257:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7751,
                              "type": "bool",
                              "value": "solValid"
                            },
                            "id": 7760,
                            "name": "Identifier",
                            "src": "1265:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f6f66206973206e6f742076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proof is not valid\"",
                              "value": "Proof is not valid"
                            },
                            "id": 7761,
                            "name": "Literal",
                            "src": "1275:20:6"
                          }
                        ],
                        "id": 7762,
                        "name": "FunctionCall",
                        "src": "1257:39:6"
                      }
                    ],
                    "id": 7763,
                    "name": "ExpressionStatement",
                    "src": "1257:39:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7692,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutionList"
                                },
                                "id": 7764,
                                "name": "Identifier",
                                "src": "1306:12:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7730,
                                  "type": "bytes32",
                                  "value": "index"
                                },
                                "id": 7765,
                                "name": "Identifier",
                                "src": "1319:5:6"
                              }
                            ],
                            "id": 7766,
                            "name": "IndexAccess",
                            "src": "1306:19:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7688,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7767,
                                "name": "Identifier",
                                "src": "1328:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7730,
                                  "type": "bytes32",
                                  "value": "index"
                                },
                                "id": 7768,
                                "name": "Identifier",
                                "src": "1337:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7706,
                                  "type": "address",
                                  "value": "solAddress"
                                },
                                "id": 7769,
                                "name": "Identifier",
                                "src": "1343:10:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7770,
                                "name": "Literal",
                                "src": "1354:4:6"
                              }
                            ],
                            "id": 7771,
                            "name": "FunctionCall",
                            "src": "1328:31:6"
                          }
                        ],
                        "id": 7772,
                        "name": "Assignment",
                        "src": "1306:53:6"
                      }
                    ],
                    "id": 7773,
                    "name": "ExpressionStatement",
                    "src": "1306:53:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7696,
                                  "type": "mapping(uint256 => bytes32)",
                                  "value": "indexList"
                                },
                                "id": 7774,
                                "name": "Identifier",
                                "src": "1369:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7708,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7775,
                                "name": "Identifier",
                                "src": "1379:7:6"
                              }
                            ],
                            "id": 7776,
                            "name": "IndexAccess",
                            "src": "1369:18:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7730,
                              "type": "bytes32",
                              "value": "index"
                            },
                            "id": 7777,
                            "name": "Identifier",
                            "src": "1390:5:6"
                          }
                        ],
                        "id": 7778,
                        "name": "Assignment",
                        "src": "1369:26:6"
                      }
                    ],
                    "id": 7779,
                    "name": "ExpressionStatement",
                    "src": "1369:26:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7704,
                              "type": "function (bytes32,address,uint256)",
                              "value": "newSolution"
                            },
                            "id": 7780,
                            "name": "Identifier",
                            "src": "1410:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7730,
                              "type": "bytes32",
                              "value": "index"
                            },
                            "id": 7781,
                            "name": "Identifier",
                            "src": "1422:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7706,
                              "type": "address",
                              "value": "solAddress"
                            },
                            "id": 7782,
                            "name": "Identifier",
                            "src": "1428:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7708,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7783,
                            "name": "Identifier",
                            "src": "1439:7:6"
                          }
                        ],
                        "id": 7784,
                        "name": "FunctionCall",
                        "src": "1410:37:6"
                      }
                    ],
                    "id": 7785,
                    "name": "EmitStatement",
                    "src": "1405:42:6"
                  }
                ],
                "id": 7786,
                "name": "Block",
                "src": "1057:405:6"
              }
            ],
            "id": 7787,
            "name": "FunctionDefinition",
            "src": "918:544:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "solMint",
              "scope": 7811,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7788,
                        "name": "ElementaryTypeName",
                        "src": "1706:7:6"
                      }
                    ],
                    "id": 7789,
                    "name": "VariableDeclaration",
                    "src": "1706:10:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7790,
                        "name": "ElementaryTypeName",
                        "src": "1718:7:6"
                      }
                    ],
                    "id": 7791,
                    "name": "VariableDeclaration",
                    "src": "1718:15:6"
                  }
                ],
                "id": 7792,
                "name": "ParameterList",
                "src": "1705:29:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7793,
                "name": "ParameterList",
                "src": "1742:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                                  "typeString": "literal_string \"This solution has already been used\""
                                }
                              ],
                              "overloadedDeclarations": [
                                9791,
                                9792
                              ],
                              "referencedDeclaration": 9792,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7794,
                            "name": "Identifier",
                            "src": "1752:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "exists",
                              "referencedDeclaration": 7687,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7692,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutionList"
                                    },
                                    "id": 7795,
                                    "name": "Identifier",
                                    "src": "1760:12:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bytes32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7696,
                                          "type": "mapping(uint256 => bytes32)",
                                          "value": "indexList"
                                        },
                                        "id": 7796,
                                        "name": "Identifier",
                                        "src": "1773:9:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7791,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7797,
                                        "name": "Identifier",
                                        "src": "1783:7:6"
                                      }
                                    ],
                                    "id": 7798,
                                    "name": "IndexAccess",
                                    "src": "1773:18:6"
                                  }
                                ],
                                "id": 7799,
                                "name": "IndexAccess",
                                "src": "1760:32:6"
                              }
                            ],
                            "id": 7800,
                            "name": "MemberAccess",
                            "src": "1760:39:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This solution has already been used\"",
                              "value": "This solution has already been used"
                            },
                            "id": 7801,
                            "name": "Literal",
                            "src": "1801:37:6"
                          }
                        ],
                        "id": 7802,
                        "name": "FunctionCall",
                        "src": "1752:87:6"
                      }
                    ],
                    "id": 7803,
                    "name": "ExpressionStatement",
                    "src": "1752:87:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1404,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7804,
                            "name": "Identifier",
                            "src": "1849:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7789,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7805,
                            "name": "Identifier",
                            "src": "1854:2:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7791,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7806,
                            "name": "Identifier",
                            "src": "1858:7:6"
                          }
                        ],
                        "id": 7807,
                        "name": "FunctionCall",
                        "src": "1849:17:6"
                      }
                    ],
                    "id": 7808,
                    "name": "ExpressionStatement",
                    "src": "1849:17:6"
                  }
                ],
                "id": 7809,
                "name": "Block",
                "src": "1742:131:6"
              }
            ],
            "id": 7810,
            "name": "FunctionDefinition",
            "src": "1689:184:6"
          }
        ],
        "id": 7811,
        "name": "ContractDefinition",
        "src": "281:1595:6"
      }
    ],
    "id": 7812,
    "name": "SourceUnit",
    "src": "0:1908:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x4A87037a1908f5b7392006165f6Af273248dac27",
      "transactionHash": "0xf9ae52b8363235e817dce0922960f5040dffd92233dd47dfe611e00b90e92a6c"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-06T22:35:18.228Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}