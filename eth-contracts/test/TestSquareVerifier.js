// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier');
const zokrates = require("../../zokrates/code/square/proof.json");

contract('TestVerifier', accounts => {
    describe('Exercise Verifier', function(){
        beforeEach(async function(){
            this.contract = await Verifier.new({from: accounts[0]})
        });

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it('Correct proof', async function(){
            let txVerified = await this.contract.verifyTx.call(zokrates.proof.a, zokrates.proof.b, zokrates.proof.c, zokrates.inputs)
            assert.equal(txVerified, true)
        });

        // Test verification with incorrect proof
        it('Incorrect proof', async function () {
            let incorrectInputs = [ 
                '0x0000000000000000000000000000000000000000000000000000000000000008',
                '0x0000000000000000000000000000000000000000000000000000000000000001']

            let txVerified = await this.contract.verifyTx.call(zokrates.proof.a, zokrates.proof.b, zokrates.proof.c, incorrectInputs);
            assert.equal(txVerified, false);
        });
    });
});